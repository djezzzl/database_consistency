DatabaseConsistencySettings:
  color: true
  log_level: DEBUG

DatabaseConsistencyCheckers:
  MissingIndexChecker:
    enabled: true # 1st priority (completely turn off particular checker)
  MissingUniqueIndexChecker:
    enabled: true
  ColumnPresenceChecker:
    enabled: true
  NullConstraintChecker:
    enabled: true
  BelongsToPresenceChecker:
    enabled: true

User:
  enabled: true # 2nd priority (turn off checking User model)
  phone:
    enabled: true # 3rd priority (turn off phone checking phone field/attribute of User model)
    ColumnPresenceChecker:
      enabled: true # 4th priority (turn off checker for phone field/attribute of User model)
  name:
    enabled: true
  code:
    enabled: true
    NullConstraintChecker:
      enabled: true
  name+email:
    MissingUniqueIndexChecker:
      enabled: true

Country:
  users:
    MissingIndexChecker:
      enabled: true

# Can be compact (example), "enabled: true" is default
# User:
#   phone:
#     ColumnPresenceChecker:
#       enabled: false
#   name:
#     enabled: false
# Company:
#   enabled: false


# Concerns can be emulated using YAML's anchors and aliases

# 1. Define an anchor before declaring concern-related settings
DateConcern: &ignore_date_concern
  date:
    NullConstraintChecker:
      enabled: false
NameConcern: &ignore_name_concern
  name:
    ColumnPresenceChecker:
      enabled: false

# Models using concerns
# 2. Now include the relevant settings using aliases
Event:
  <<: *ignore_date_concern
  <<: *ignore_name_concern
Poll:
  <<: *ignore_date_concern
